{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/assets/js/script.js","source/assets/js/sierpinski-carpet.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","default","defaults","width","window","innerWidth","height","innerHeight","limit","SierpinskiCarpet","element","options","_classCallCheck","this","Object","assign","init","render","canvas","document","querySelector","context","getContext","size","Math","min","x0","y0","x","y","fillRect","carpet"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAa,GAAA,SAAAT,EAAAU,EAAAJ,gBCEA,sDAFAN,EAAA,wBAEAW,SAAqB,+cCFfC,GACJC,MAAQC,OAAOC,WACfC,OAAQF,OAAOG,YACfC,MAAO,GAGHC,aAEJ,SAAAA,EAAYC,EAASC,GAASC,EAAAC,KAAAJ,GAC5BK,OAAOC,OAAOF,KAAMX,EAAUS,GAE9BE,KAAKH,QAAUA,EAEfG,KAAKG,OACLH,KAAKI,OAAON,4CAIZ,IAAMO,EAAUL,KAAKK,OAAWC,SAASC,cAAcP,KAAKH,SAEtDP,GADUU,KAAKQ,QAAWR,KAAKK,OAAOI,WAAW,MACvCJ,EAAOf,MAASU,KAAKV,OAC/BG,EAAUY,EAAOZ,OAASO,KAAKP,OAExBO,KAAKU,KAAOC,KAAKC,IAAItB,EAAOG,kCAGpCiB,EAAMf,EAAOkB,EAAIC,GACtB,IAAIC,OAAA,EACAC,OAAA,EAIJ,GAFAN,GAAc,EAEVf,EAAQ,EAKV,IAHAK,KAAKQ,QAAQS,SAASP,EAAOG,EAAIH,EAAOI,EAAIJ,EAAMA,GAClDf,IAEKoB,EAAI,EAAGA,EAAI,EAAGA,IAEjB,IAAKC,EAAI,EAAGA,EAAI,EAAGA,IACjBhB,KAAKkB,OAAOR,EAAMf,EAAOkB,EAAKE,EAAIL,EAAMI,EAAKE,EAAIN,kCAQlDZ,GACLE,KAAKkB,OAAOlB,KAAKU,KAAMV,KAAKL,MAAO,EAAG,sBAK3BC","file":"script.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import SierpinskiCarpet from './sierpinski-carpet';\n\nnew SierpinskiCarpet('.canvas');\n","const defaults = {\n  width : window.innerWidth,\n  height: window.innerHeight,\n  limit: 5\n};\n\nclass SierpinskiCarpet {\n\n  constructor(element, options) {\n    Object.assign(this, defaults, options);\n\n    this.element = element;\n\n    this.init();\n    this.render(options);\n  }\n\n  init() {\n    const canvas  = this.canvas   = document.querySelector(this.element);\n    const context = this.context  = this.canvas.getContext('2d');\n    const width   = canvas.width  = this.width;\n    const height  = canvas.height = this.height;\n\n    const size = this.size = Math.min(width, height);\n  }\n\n  carpet(size, limit, x0, y0) {\n    let x;\n    let y;\n\n    size = size / 3;\n\n    if (limit > 0) {\n\n      this.context.fillRect(size + x0, size + y0, size, size);\n      limit--;\n\n      for (x = 0; x < 3; x++) {\n\n        for (y = 0; y < 3; y++) {\n          this.carpet(size, limit, x0 + x * size, y0 + y * size);\n        }\n\n      }\n    }\n\n  }\n\n  render(options) {\n    this.carpet(this.size, this.limit, 0, 0);\n  }\n\n}\n\nexport default SierpinskiCarpet;\n\n\n"]}
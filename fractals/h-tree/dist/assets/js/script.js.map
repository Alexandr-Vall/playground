{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/assets/js/degrees-to-radians.js","source/assets/js/h-tree.js","source/assets/js/script.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","degrees","Math","PI","defaults","width","window","innerWidth","height","innerHeight","direction","angle","limit","HTree","element","options","_classCallCheck","this","Object","assign","init","render","canvas","document","querySelector","context","getContext","translate","points","pointsLength","beginPath","lineTo","x","y","stroke","p0","pA","cos","_degreesToRadians2","default","sin","drawPath","hTree","closePath"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAa,GAAA,SAAAT,EAAAU,EAAAJ,2ECAA,SAA0BK,GACxB,OAAOA,GAAWC,KAAKC,GAAK,ueCD9Bb,EAAA,yBAEMc,GACJC,MAAQC,OAAOC,WACfC,OAAQF,OAAOG,YACfC,WAAY,GACZC,MAAO,GACPC,MAAO,IAGHC,aAEJ,SAAAA,EAAYC,EAASC,GAASC,EAAAC,KAAAJ,GAC5BK,OAAOC,OAAOF,KAAMb,EAAUW,GAE9BE,KAAKH,QAAUA,EAEfG,KAAKG,OACLH,KAAKI,OAAON,4CAIZ,IAAMO,EAAUL,KAAKK,OAAWC,SAASC,cAAcP,KAAKH,SACtDW,EAAUR,KAAKQ,QAAWR,KAAKK,OAAOI,WAAW,MACjDrB,EAAUiB,EAAOjB,MAASY,KAAKZ,MAC/BG,EAAUc,EAAOd,OAASS,KAAKT,OAErCiB,EAAQE,UAAUtB,EAAQ,EAAGG,EAAS,oCAG/BoB,GAAQ,IACPH,EAAYR,KAAZQ,QAEJI,EAAeD,EAAO9B,OAI1B,IAFA2B,EAAQK,YAEFD,KACJJ,EAAQM,OAAOH,EAAOC,GAAcG,EAAGJ,EAAOC,GAAcI,GAG9DR,EAAQS,uCAIJC,EAAIxB,EAAOC,GAEf,GAAIA,EAAQ,EAAG,CACb,IAAMwB,GACJJ,EAAGG,EAAGH,EAAK9B,KAAKmC,KAAI,EAAAC,EAAAC,SAAiB5B,IAAUC,EAAQ,EACvDqB,EAAGE,EAAGF,EAAK/B,KAAKsC,KAAI,EAAAF,EAAAC,SAAiB5B,IAAUC,EAAQ,GAGzDK,KAAKwB,UAAUN,EAAIC,IACnBnB,KAAKyB,MAAMN,EAAIzB,EAAQM,KAAKN,MAAOC,EAAQ,GAC3CK,KAAKyB,MAAMN,EAAIzB,EAAQM,KAAKN,MAAOC,EAAQ,mCAKxCG,GAAS,IACNU,EAAYR,KAAZQ,QACFU,GACJH,EAAG,EACHC,EAAG,KAGLR,EAAQK,YAERb,KAAKyB,MAAMP,EAAIlB,KAAKP,UAAWO,KAAKL,OAEpCa,EAAQkB,YACRlB,EAAQS,4BAKGrB,+DC3Ef,sDAFAvB,EAAA,aAEAiD,SAAU","file":"script.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","function degreesToRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nexport default degreesToRadians;\n","import degreesToRadians from './degrees-to-radians';\n\nconst defaults = {\n  width : window.innerWidth,\n  height: window.innerHeight,\n  direction: -90,\n  angle: 20,\n  limit: 10\n};\n\nclass HTree {\n\n  constructor(element, options) {\n    Object.assign(this, defaults, options);\n\n    this.element = element;\n\n    this.init();\n    this.render(options);\n  }\n\n  init() {\n    const canvas  = this.canvas   = document.querySelector(this.element);\n    const context = this.context  = this.canvas.getContext('2d');\n    const width   = canvas.width  = this.width;\n    const height  = canvas.height = this.height;\n\n    context.translate(width / 2, height / 2);\n  }\n\n  drawPath(points) {\n    const { context } = this;\n\n    let pointsLength = points.length;\n\n    context.beginPath();\n\n    while(pointsLength--) {\n      context.lineTo(points[pointsLength].x, points[pointsLength].y);\n    }\n\n    context.stroke();\n  }\n\n\n  hTree(p0, angle, limit) {\n\n    if (limit > 0) {\n      const pA = {\n        x: p0.x + (Math.cos(degreesToRadians(angle)) * limit * 8),\n        y: p0.y + (Math.sin(degreesToRadians(angle)) * limit * 8)\n      };\n\n      this.drawPath([p0, pA]);\n      this.hTree(pA, angle - this.angle, limit - 1);\n      this.hTree(pA, angle + this.angle, limit - 1);\n    }\n\n  }\n\n  render(options) {\n    const { context } = this;\n    const p0 = {\n      x: 0,\n      y: 250\n    };\n\n    context.beginPath();\n\n    this.hTree(p0, this.direction, this.limit);\n\n    context.closePath();\n    context.stroke();\n  }\n\n}\n\nexport default HTree;\n","import HTree from './h-tree';\n\nnew HTree('.canvas');\n"]}
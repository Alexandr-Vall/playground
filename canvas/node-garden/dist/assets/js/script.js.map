{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/assets/js/get-distance.js","source/assets/js/node-garden.js","source/assets/js/node.js","source/assets/js/nodes.js","source/assets/js/script.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","vectorA","vectorB","dx","x","dy","y","Math","sqrt","NodeGarden","element","options","_classCallCheck","this","defaults","width","window","innerWidth","height","innerHeight","Object","assign","init","canvas","document","querySelector","context","getContext","nodes","_nodes2","default","render","clearRect","requestAnimationFrame","update","bind","Node","vx","random","vy","radius","beginPath","arc","PI","fill","Nodes","maxDistance","push","_node2","_i","nodeA","j","nodeB","distance","_getDistance2","lineWidth","moveTo","lineTo","stroke"],"mappings":"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","file":"script.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","function getDistance(vectorA, vectorB) {\n  const dx = vectorB.x - vectorA.x;\n  const dy = vectorB.y - vectorA.y;\n\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport default getDistance;\n","import Nodes from './nodes';\n\nclass NodeGarden {\n  constructor(element, options) {\n    const defaults = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    Object.assign(this, options, defaults);\n\n    this.element = element;\n\n    this.init();\n  }\n\n  init() {\n    const canvas  = document.querySelector(this.element);\n    this.context = canvas.getContext('2d');\n\n    const width  = canvas.width  = this.width;\n    const height = canvas.height = this.height;\n\n    this.nodes = new Nodes({\n      width,\n      height\n    });\n  }\n\n  render(context) {\n    this.nodes.render(context)\n  }\n\n  update() {\n    const { context, width, height } = this;\n\n    this.context.clearRect(0, 0, width, height);\n    this.render(context);\n\n    requestAnimationFrame(this.update.bind(this));\n  }\n\n}\n\nexport default NodeGarden;\n","class Node {\n  constructor(options) {\n    const defaults = {\n      vx: Math.random() * 2 - 1,\n      vy: Math.random() * 2 - 1,\n      radius: 2\n    };\n\n    Object.assign(this, options, defaults);\n  }\n\n  render(context) {\n    const { x, y, radius } = this;\n\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2);\n    context.fill();\n  }\n\n  update(context, width, height) {\n    const { x, y, vx, vy } = this;\n\n    this.x += vx;\n    this.y += vy;\n\n    if (x < 0) {\n      this.x = width;\n    } else if (x > width) {\n      this.x = 0\n    }\n\n    if (y < 0) {\n      this.y = height;\n    } else if (y > height) {\n      this.y = 0\n    }\n\n    this.render(context);\n  }\n}\n\nexport default Node;\n","import getDistance from './get-distance';\nimport Node        from './node';\n\nclass Nodes {\n  constructor(options) {\n    const defaults = {\n      length: 150,\n      maxDistance: 200\n    };\n\n    Object.assign(this, options, defaults);\n\n    this.init();\n  }\n\n  init() {\n    const { length, width, height } = this;\n\n    this.nodes = [];\n\n    for (let i = 0; i < length; i++) {\n      this.nodes.push(new Node({\n        x: Math.random() * width,\n        y: Math.random() * height\n      }));\n    }\n  }\n\n  render(context) {\n    const { length, nodes, maxDistance, width, height } = this;\n\n    for (let i = 0; i < length; i++) {\n      this.nodes[i].update(context, width, height);\n    }\n\n    for (let i = 0; i < length - 1; i++)Â {\n      const nodeA = nodes[i];\n\n      for (let j = i + 1; j < length; j++) {\n        const nodeB = nodes[j];\n        const distance = getDistance(nodeA, nodeB);\n\n        if (distance < maxDistance) {\n          context.lineWidth = 1 - distance / maxDistance;\n          context.beginPath();\n          context.moveTo(nodeA.x, nodeA.y);\n          context.lineTo(nodeB.x, nodeB.y);\n          context.stroke();\n        }\n\n      }\n\n    }\n\n  }\n\n}\n\nexport default Nodes;\n","import NodeGarden from './node-garden';\n\nconst nodeGarden = new NodeGarden('.js-canvas');\n\nnodeGarden.update();\n"]}